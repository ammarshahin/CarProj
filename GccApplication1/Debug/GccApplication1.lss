
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00000e76  00000f0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  0080007e  0080007e  00000f28  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000388  00000000  00000000  00000f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b5d  00000000  00000000  0000131c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f9a  00000000  00000000  00003e79  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b9b  00000000  00000000  00004e13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008a4  00000000  00000000  000069b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000011b5  00000000  00000000  00007254  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002252  00000000  00000000  00008409  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c0  00000000  00000000  0000a65b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 af 01 	jmp	0x35e	; 0x35e <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e7       	ldi	r30, 0x76	; 118
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e7       	ldi	r26, 0x7E	; 126
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 39       	cpi	r26, 0x93	; 147
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 0d 02 	call	0x41a	; 0x41a <main>
  8a:	0c 94 39 07 	jmp	0xe72	; 0xe72 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Car_Init>:
  92:	0e 94 c0 01 	call	0x380	; 0x380 <Ultrasonic_Init>
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	0e 94 9d 00 	call	0x13a	; 0x13a <DC_Motor_Init>
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	0e 94 9d 00 	call	0x13a	; 0x13a <DC_Motor_Init>
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	0e 94 15 01 	call	0x22a	; 0x22a <DC_Motor_Start>
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	0e 94 15 01 	call	0x22a	; 0x22a <DC_Motor_Start>
  ae:	08 95       	ret

000000b0 <Car_Action>:
  b0:	0e 94 cd 01 	call	0x39a	; 0x39a <Ultrasonic_Trigger>
  b4:	0e 94 de 01 	call	0x3bc	; 0x3bc <Ultrasonic_CalculateDistance>
  b8:	6d 33       	cpi	r22, 0x3D	; 61
  ba:	30 f0       	brcs	.+12     	; 0xc8 <Car_Action+0x18>
  bc:	0e 94 82 00 	call	0x104	; 0x104 <Move_Forward>
  c0:	84 e6       	ldi	r24, 0x64	; 100
  c2:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DC_Motor_Set_Speed>
  c6:	08 95       	ret
  c8:	81 ee       	ldi	r24, 0xE1	; 225
  ca:	86 0f       	add	r24, r22
  cc:	8d 31       	cpi	r24, 0x1D	; 29
  ce:	60 f4       	brcc	.+24     	; 0xe8 <Car_Action+0x38>
  d0:	0e 94 94 00 	call	0x128	; 0x128 <Move_RotateRight>
  d4:	82 e3       	ldi	r24, 0x32	; 50
  d6:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DC_Motor_Set_Speed>
  da:	64 e6       	ldi	r22, 0x64	; 100
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 28 05 	call	0xa50	; 0xa50 <SwDelay_ms>
  e6:	08 95       	ret
  e8:	6e 31       	cpi	r22, 0x1E	; 30
  ea:	58 f4       	brcc	.+22     	; 0x102 <Car_Action+0x52>
  ec:	8e e1       	ldi	r24, 0x1E	; 30
  ee:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DC_Motor_Set_Speed>
  f2:	0e 94 8b 00 	call	0x116	; 0x116 <Move_Backward>
  f6:	64 e6       	ldi	r22, 0x64	; 100
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 28 05 	call	0xa50	; 0xa50 <SwDelay_ms>
 102:	08 95       	ret

00000104 <Move_Forward>:
 104:	61 e0       	ldi	r22, 0x01	; 1
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 114:	08 95       	ret

00000116 <Move_Backward>:
 116:	60 e0       	ldi	r22, 0x00	; 0
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 126:	08 95       	ret

00000128 <Move_RotateRight>:
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 130:	61 e0       	ldi	r22, 0x01	; 1
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 138:	08 95       	ret

0000013a <DC_Motor_Init>:
		Gpio_PinWrite(DC_MOTOR_CHANNEL_0_PORT,DC_MOTOR_CHANNEL_0_PIN_1,LOW);
		Gpio_PinWrite(DC_MOTOR_CHANNEL_0_PORT,DC_MOTOR_CHANNEL_0_PIN_2,LOW);
		break;
		case DC_MOTOR_CHANNEL_1 : 
		Gpio_PinWrite(DC_MOTOR_CHANNEL_1_PORT,DC_MOTOR_CHANNEL_1_PIN_1,LOW);
		Gpio_PinWrite(DC_MOTOR_CHANNEL_1_PORT,DC_MOTOR_CHANNEL_1_PIN_2,LOW);
 13a:	cf 93       	push	r28
 13c:	c8 2f       	mov	r28, r24
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <PWM_Init>
 144:	cc 23       	and	r28, r28
 146:	19 f0       	breq	.+6      	; 0x14e <DC_Motor_Init+0x14>
 148:	c1 30       	cpi	r28, 0x01	; 1
 14a:	b1 f0       	breq	.+44     	; 0x178 <DC_Motor_Init+0x3e>
 14c:	29 c0       	rjmp	.+82     	; 0x1a0 <DC_Motor_Init+0x66>
 14e:	4f ef       	ldi	r20, 0xFF	; 255
 150:	61 e0       	ldi	r22, 0x01	; 1
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 158:	4f ef       	ldi	r20, 0xFF	; 255
 15a:	64 e0       	ldi	r22, 0x04	; 4
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	61 e0       	ldi	r22, 0x01	; 1
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 16c:	40 e0       	ldi	r20, 0x00	; 0
 16e:	64 e0       	ldi	r22, 0x04	; 4
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 176:	14 c0       	rjmp	.+40     	; 0x1a0 <DC_Motor_Init+0x66>
 178:	4f ef       	ldi	r20, 0xFF	; 255
 17a:	62 e0       	ldi	r22, 0x02	; 2
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 182:	4f ef       	ldi	r20, 0xFF	; 255
 184:	68 e0       	ldi	r22, 0x08	; 8
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	62 e0       	ldi	r22, 0x02	; 2
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	68 e0       	ldi	r22, 0x08	; 8
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <DC_Motor_Set_Speed>:
 1a4:	85 36       	cpi	r24, 0x65	; 101
 1a6:	30 f4       	brcc	.+12     	; 0x1b4 <DC_Motor_Set_Speed+0x10>
 1a8:	64 e1       	ldi	r22, 0x14	; 20
 1aa:	70 e0       	ldi	r23, 0x00	; 0
 1ac:	0e 94 0f 03 	call	0x61e	; 0x61e <PWM_PhaseCorrect>
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	08 95       	ret
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	08 95       	ret

000001b8 <DC_Motor_Set_Direction>:
 1b8:	88 23       	and	r24, r24
 1ba:	19 f0       	breq	.+6      	; 0x1c2 <DC_Motor_Set_Direction+0xa>
 1bc:	81 30       	cpi	r24, 0x01	; 1
 1be:	d1 f0       	breq	.+52     	; 0x1f4 <DC_Motor_Set_Direction+0x3c>
 1c0:	32 c0       	rjmp	.+100    	; 0x226 <DC_Motor_Set_Direction+0x6e>
 1c2:	66 23       	and	r22, r22
 1c4:	61 f0       	breq	.+24     	; 0x1de <DC_Motor_Set_Direction+0x26>
 1c6:	61 30       	cpi	r22, 0x01	; 1
 1c8:	71 f5       	brne	.+92     	; 0x226 <DC_Motor_Set_Direction+0x6e>
 1ca:	41 e0       	ldi	r20, 0x01	; 1
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 1d2:	40 e0       	ldi	r20, 0x00	; 0
 1d4:	64 e0       	ldi	r22, 0x04	; 4
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 1dc:	24 c0       	rjmp	.+72     	; 0x226 <DC_Motor_Set_Direction+0x6e>
 1de:	40 e0       	ldi	r20, 0x00	; 0
 1e0:	61 e0       	ldi	r22, 0x01	; 1
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 1e8:	41 e0       	ldi	r20, 0x01	; 1
 1ea:	64 e0       	ldi	r22, 0x04	; 4
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 1f2:	19 c0       	rjmp	.+50     	; 0x226 <DC_Motor_Set_Direction+0x6e>
 1f4:	66 23       	and	r22, r22
 1f6:	69 f0       	breq	.+26     	; 0x212 <DC_Motor_Set_Direction+0x5a>
 1f8:	61 30       	cpi	r22, 0x01	; 1
 1fa:	a9 f4       	brne	.+42     	; 0x226 <DC_Motor_Set_Direction+0x6e>
 1fc:	41 e0       	ldi	r20, 0x01	; 1
 1fe:	62 e0       	ldi	r22, 0x02	; 2
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 206:	40 e0       	ldi	r20, 0x00	; 0
 208:	68 e0       	ldi	r22, 0x08	; 8
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 210:	0a c0       	rjmp	.+20     	; 0x226 <DC_Motor_Set_Direction+0x6e>
 212:	40 e0       	ldi	r20, 0x00	; 0
 214:	62 e0       	ldi	r22, 0x02	; 2
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 21c:	41 e0       	ldi	r20, 0x01	; 1
 21e:	68 e0       	ldi	r22, 0x08	; 8
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	08 95       	ret

0000022a <DC_Motor_Start>:
 * Description : This function is used to Start the motor Channel.
 * @pram  Channel : Set the Channel of the motor.
 * Return : the function Returns Nothing.
 */
void DC_Motor_Start(uint8 Channel)
{
 22a:	cf 93       	push	r28
 22c:	c8 2f       	mov	r28, r24
	DC_Motor_Set_Speed(DEFAULT_SPEED);
 22e:	82 e3       	ldi	r24, 0x32	; 50
 230:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DC_Motor_Set_Speed>
	Timers_Start(TIMER1);
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <Timers_Start>
	DC_Motor_Set_Direction(Channel,DC_MOTOR_FORWARD); // Move Forward as A default Direction
 23a:	61 e0       	ldi	r22, 0x01	; 1
 23c:	8c 2f       	mov	r24, r28
 23e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DC_Motor_Set_Direction>
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <SwICU_Init>:
 */
uint8 SwICU_Disable(void)
{
	Timers_Stop(TIMER2);
	return OK;
}
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	86 e0       	ldi	r24, 0x06	; 6
 24a:	0e 94 8e 02 	call	0x51c	; 0x51c <Interrupts_ExtInt_Init>
 24e:	80 e6       	ldi	r24, 0x60	; 96
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <Timers_Init>
 256:	0e 94 8a 02 	call	0x514	; 0x514 <Interrupts_On>
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	08 95       	ret

0000025e <SwICU_Read>:
 25e:	fc 01       	movw	r30, r24
 260:	70 91 7e 00 	lds	r23, 0x007E	; 0x80007e <__data_end>
 264:	60 91 7f 00 	lds	r22, 0x007F	; 0x80007f <__data_end+0x1>
 268:	50 91 80 00 	lds	r21, 0x0080	; 0x800080 <__data_end+0x2>
 26c:	40 91 81 00 	lds	r20, 0x0081	; 0x800081 <__data_end+0x3>
 270:	30 91 82 00 	lds	r19, 0x0082	; 0x800082 <__data_end+0x4>
 274:	20 91 83 00 	lds	r18, 0x0083	; 0x800083 <__data_end+0x5>
 278:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <__data_end+0x6>
 27c:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <__data_end+0x7>
 280:	70 83       	st	Z, r23
 282:	61 83       	std	Z+1, r22	; 0x01
 284:	52 83       	std	Z+2, r21	; 0x02
 286:	43 83       	std	Z+3, r20	; 0x03
 288:	34 83       	std	Z+4, r19	; 0x04
 28a:	25 83       	std	Z+5, r18	; 0x05
 28c:	96 83       	std	Z+6, r25	; 0x06
 28e:	87 83       	std	Z+7, r24	; 0x07
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	08 95       	ret

00000294 <__vector_1>:
 * Description: This is an ISR that executes when an External interrupt occurs.
 * Parameter: void 
 * Return : void
 */
ISR_T(INT0_vect)
{
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	2f 93       	push	r18
 2a0:	3f 93       	push	r19
 2a2:	4f 93       	push	r20
 2a4:	5f 93       	push	r21
 2a6:	6f 93       	push	r22
 2a8:	7f 93       	push	r23
 2aa:	8f 93       	push	r24
 2ac:	9f 93       	push	r25
 2ae:	af 93       	push	r26
 2b0:	bf 93       	push	r27
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	ef 93       	push	r30
 2b8:	ff 93       	push	r31
	if(Falling_Raising_Flag == FALSE)
 2ba:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <Falling_Raising_Flag>
 2be:	81 11       	cpse	r24, r1
 2c0:	0b c0       	rjmp	.+22     	; 0x2d8 <__vector_1+0x44>
	{
		Timers_timer2_Set(FALSE);
 2c2:	0e 94 24 05 	call	0xa48	; 0xa48 <Timers_timer2_Set>
		Timers_Start(TIMER2);
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <Timers_Start>
		numOfOverflows = 0;
 2cc:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <numOfOverflows>
		Falling_Raising_Flag = TRUE;
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <Falling_Raising_Flag>
 2d6:	30 c0       	rjmp	.+96     	; 0x338 <__vector_1+0xa4>
	}
	else if(Falling_Raising_Flag == TRUE)
 2d8:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <Falling_Raising_Flag>
 2dc:	81 30       	cpi	r24, 0x01	; 1
 2de:	61 f5       	brne	.+88     	; 0x338 <__vector_1+0xa4>
	{
		raising_time_ns =  ( ( (numOfOverflows * REGISTER_BIT_MAXVALUE) + Timers_timer2_Read()) * ( F_CPU_PRESCALLER_FACTOR /F_CPU ) );
 2e0:	c0 91 86 00 	lds	r28, 0x0086	; 0x800086 <numOfOverflows>
 2e4:	0e 94 26 05 	call	0xa4c	; 0xa4c <Timers_timer2_Read>
 2e8:	ac 2f       	mov	r26, r28
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	ba 2f       	mov	r27, r26
 2ee:	aa 27       	eor	r26, r26
 2f0:	a8 0f       	add	r26, r24
 2f2:	b1 1d       	adc	r27, r1
 2f4:	2d e7       	ldi	r18, 0x7D	; 125
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	0e 94 27 07 	call	0xe4e	; 0xe4e <__usmulhisi3>
 2fc:	dc 01       	movw	r26, r24
 2fe:	cb 01       	movw	r24, r22
 300:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end>
 304:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <__data_end+0x1>
 308:	a0 93 80 00 	sts	0x0080, r26	; 0x800080 <__data_end+0x2>
 30c:	b0 93 81 00 	sts	0x0081, r27	; 0x800081 <__data_end+0x3>
 310:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__data_end+0x4>
 314:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__data_end+0x5>
 318:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__data_end+0x6>
 31c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__data_end+0x7>
		Timers_Stop(TIMER2);
 320:	82 e0       	ldi	r24, 0x02	; 2
 322:	0e 94 11 05 	call	0xa22	; 0xa22 <Timers_Stop>
		numOfOverflows = FALSE;
 326:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <numOfOverflows>
		Timers_Set(TIMER2,FALSE);
 32a:	60 e0       	ldi	r22, 0x00	; 0
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	82 e0       	ldi	r24, 0x02	; 2
 330:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <Timers_Set>
		Falling_Raising_Flag = FALSE;
 334:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <Falling_Raising_Flag>
	}
}
 338:	ff 91       	pop	r31
 33a:	ef 91       	pop	r30
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	bf 91       	pop	r27
 342:	af 91       	pop	r26
 344:	9f 91       	pop	r25
 346:	8f 91       	pop	r24
 348:	7f 91       	pop	r23
 34a:	6f 91       	pop	r22
 34c:	5f 91       	pop	r21
 34e:	4f 91       	pop	r20
 350:	3f 91       	pop	r19
 352:	2f 91       	pop	r18
 354:	0f 90       	pop	r0
 356:	0f be       	out	0x3f, r0	; 63
 358:	0f 90       	pop	r0
 35a:	1f 90       	pop	r1
 35c:	18 95       	reti

0000035e <__vector_5>:
 * Description: This is an ISR that executes when the timer 2 overflows.
 * Parameter: void 
 * Return : void
 */
ISR_T(TIMER2_OVF_vect)
{
 35e:	1f 92       	push	r1
 360:	0f 92       	push	r0
 362:	0f b6       	in	r0, 0x3f	; 63
 364:	0f 92       	push	r0
 366:	11 24       	eor	r1, r1
 368:	8f 93       	push	r24
	numOfOverflows++;
 36a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <numOfOverflows>
 36e:	8f 5f       	subi	r24, 0xFF	; 255
 370:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <numOfOverflows>
 374:	8f 91       	pop	r24
 376:	0f 90       	pop	r0
 378:	0f be       	out	0x3f, r0	; 63
 37a:	0f 90       	pop	r0
 37c:	1f 90       	pop	r1
 37e:	18 95       	reti

00000380 <Ultrasonic_Init>:
 380:	0e 94 23 01 	call	0x246	; 0x246 <SwICU_Init>
 384:	4f ef       	ldi	r20, 0xFF	; 255
 386:	60 e8       	ldi	r22, 0x80	; 128
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 38e:	40 e0       	ldi	r20, 0x00	; 0
 390:	64 e0       	ldi	r22, 0x04	; 4
 392:	83 e0       	ldi	r24, 0x03	; 3
 394:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 398:	08 95       	ret

0000039a <Ultrasonic_Trigger>:
 39a:	41 e0       	ldi	r20, 0x01	; 1
 39c:	60 e8       	ldi	r22, 0x80	; 128
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 3a4:	6a e0       	ldi	r22, 0x0A	; 10
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 3d 05 	call	0xa7a	; 0xa7a <SwDelay_us>
 3b0:	40 e0       	ldi	r20, 0x00	; 0
 3b2:	60 e8       	ldi	r22, 0x80	; 128
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 52 02 	call	0x4a4	; 0x4a4 <Gpio_PinWrite>
 3ba:	08 95       	ret

000003bc <Ultrasonic_CalculateDistance>:
 3bc:	cf 93       	push	r28
 3be:	df 93       	push	r29
 3c0:	cd b7       	in	r28, 0x3d	; 61
 3c2:	de b7       	in	r29, 0x3e	; 62
 3c4:	28 97       	sbiw	r28, 0x08	; 8
 3c6:	0f b6       	in	r0, 0x3f	; 63
 3c8:	f8 94       	cli
 3ca:	de bf       	out	0x3e, r29	; 62
 3cc:	0f be       	out	0x3f, r0	; 63
 3ce:	cd bf       	out	0x3d, r28	; 61
 3d0:	ce 01       	movw	r24, r28
 3d2:	01 96       	adiw	r24, 0x01	; 1
 3d4:	0e 94 2f 01 	call	0x25e	; 0x25e <SwICU_Read>
 3d8:	29 81       	ldd	r18, Y+1	; 0x01
 3da:	3a 81       	ldd	r19, Y+2	; 0x02
 3dc:	4b 81       	ldd	r20, Y+3	; 0x03
 3de:	5c 81       	ldd	r21, Y+4	; 0x04
 3e0:	6d 81       	ldd	r22, Y+5	; 0x05
 3e2:	7e 81       	ldd	r23, Y+6	; 0x06
 3e4:	8f 81       	ldd	r24, Y+7	; 0x07
 3e6:	98 85       	ldd	r25, Y+8	; 0x08
 3e8:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__floatundisf>
 3ec:	28 e2       	ldi	r18, 0x28	; 40
 3ee:	3b e6       	ldi	r19, 0x6B	; 107
 3f0:	4e e6       	ldi	r20, 0x6E	; 110
 3f2:	5e e4       	ldi	r21, 0x4E	; 78
 3f4:	0e 94 59 05 	call	0xab2	; 0xab2 <__divsf3>
 3f8:	20 e0       	ldi	r18, 0x00	; 0
 3fa:	3c ef       	ldi	r19, 0xFC	; 252
 3fc:	45 e8       	ldi	r20, 0x85	; 133
 3fe:	56 e4       	ldi	r21, 0x46	; 70
 400:	0e 94 89 06 	call	0xd12	; 0xd12 <__mulsf3>
 404:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fixunssfsi>
 408:	28 96       	adiw	r28, 0x08	; 8
 40a:	0f b6       	in	r0, 0x3f	; 63
 40c:	f8 94       	cli
 40e:	de bf       	out	0x3e, r29	; 62
 410:	0f be       	out	0x3f, r0	; 63
 412:	cd bf       	out	0x3d, r28	; 61
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	08 95       	ret

0000041a <main>:
 41a:	0e 94 49 00 	call	0x92	; 0x92 <Car_Init>
 41e:	0e 94 58 00 	call	0xb0	; 0xb0 <Car_Action>
 422:	fd cf       	rjmp	.-6      	; 0x41e <main+0x4>

00000424 <Gpio_PinDirection>:
 424:	81 30       	cpi	r24, 0x01	; 1
 426:	a1 f0       	breq	.+40     	; 0x450 <Gpio_PinDirection+0x2c>
 428:	28 f0       	brcs	.+10     	; 0x434 <Gpio_PinDirection+0x10>
 42a:	82 30       	cpi	r24, 0x02	; 2
 42c:	f9 f0       	breq	.+62     	; 0x46c <Gpio_PinDirection+0x48>
 42e:	83 30       	cpi	r24, 0x03	; 3
 430:	59 f1       	breq	.+86     	; 0x488 <Gpio_PinDirection+0x64>
 432:	08 95       	ret
 434:	44 23       	and	r20, r20
 436:	19 f0       	breq	.+6      	; 0x43e <Gpio_PinDirection+0x1a>
 438:	4f 3f       	cpi	r20, 0xFF	; 255
 43a:	31 f0       	breq	.+12     	; 0x448 <Gpio_PinDirection+0x24>
 43c:	08 95       	ret
 43e:	8a b3       	in	r24, 0x1a	; 26
 440:	60 95       	com	r22
 442:	68 23       	and	r22, r24
 444:	6a bb       	out	0x1a, r22	; 26
 446:	08 95       	ret
 448:	8a b3       	in	r24, 0x1a	; 26
 44a:	68 2b       	or	r22, r24
 44c:	6a bb       	out	0x1a, r22	; 26
 44e:	08 95       	ret
 450:	44 23       	and	r20, r20
 452:	19 f0       	breq	.+6      	; 0x45a <Gpio_PinDirection+0x36>
 454:	4f 3f       	cpi	r20, 0xFF	; 255
 456:	31 f0       	breq	.+12     	; 0x464 <Gpio_PinDirection+0x40>
 458:	08 95       	ret
 45a:	87 b3       	in	r24, 0x17	; 23
 45c:	60 95       	com	r22
 45e:	68 23       	and	r22, r24
 460:	67 bb       	out	0x17, r22	; 23
 462:	08 95       	ret
 464:	87 b3       	in	r24, 0x17	; 23
 466:	68 2b       	or	r22, r24
 468:	67 bb       	out	0x17, r22	; 23
 46a:	08 95       	ret
 46c:	44 23       	and	r20, r20
 46e:	19 f0       	breq	.+6      	; 0x476 <Gpio_PinDirection+0x52>
 470:	4f 3f       	cpi	r20, 0xFF	; 255
 472:	31 f0       	breq	.+12     	; 0x480 <Gpio_PinDirection+0x5c>
 474:	08 95       	ret
 476:	84 b3       	in	r24, 0x14	; 20
 478:	60 95       	com	r22
 47a:	68 23       	and	r22, r24
 47c:	64 bb       	out	0x14, r22	; 20
 47e:	08 95       	ret
 480:	84 b3       	in	r24, 0x14	; 20
 482:	68 2b       	or	r22, r24
 484:	64 bb       	out	0x14, r22	; 20
 486:	08 95       	ret
 488:	44 23       	and	r20, r20
 48a:	19 f0       	breq	.+6      	; 0x492 <Gpio_PinDirection+0x6e>
 48c:	4f 3f       	cpi	r20, 0xFF	; 255
 48e:	31 f0       	breq	.+12     	; 0x49c <Gpio_PinDirection+0x78>
 490:	08 95       	ret
 492:	81 b3       	in	r24, 0x11	; 17
 494:	60 95       	com	r22
 496:	68 23       	and	r22, r24
 498:	61 bb       	out	0x11, r22	; 17
 49a:	08 95       	ret
 49c:	81 b3       	in	r24, 0x11	; 17
 49e:	68 2b       	or	r22, r24
 4a0:	61 bb       	out	0x11, r22	; 17
 4a2:	08 95       	ret

000004a4 <Gpio_PinWrite>:
 4a4:	44 23       	and	r20, r20
 4a6:	d1 f0       	breq	.+52     	; 0x4dc <Gpio_PinWrite+0x38>
 4a8:	41 30       	cpi	r20, 0x01	; 1
 4aa:	99 f5       	brne	.+102    	; 0x512 <Gpio_PinWrite+0x6e>
 4ac:	81 30       	cpi	r24, 0x01	; 1
 4ae:	51 f0       	breq	.+20     	; 0x4c4 <Gpio_PinWrite+0x20>
 4b0:	28 f0       	brcs	.+10     	; 0x4bc <Gpio_PinWrite+0x18>
 4b2:	82 30       	cpi	r24, 0x02	; 2
 4b4:	59 f0       	breq	.+22     	; 0x4cc <Gpio_PinWrite+0x28>
 4b6:	83 30       	cpi	r24, 0x03	; 3
 4b8:	69 f0       	breq	.+26     	; 0x4d4 <Gpio_PinWrite+0x30>
 4ba:	08 95       	ret
 4bc:	8b b3       	in	r24, 0x1b	; 27
 4be:	68 2b       	or	r22, r24
 4c0:	6b bb       	out	0x1b, r22	; 27
 4c2:	08 95       	ret
 4c4:	88 b3       	in	r24, 0x18	; 24
 4c6:	68 2b       	or	r22, r24
 4c8:	68 bb       	out	0x18, r22	; 24
 4ca:	08 95       	ret
 4cc:	85 b3       	in	r24, 0x15	; 21
 4ce:	68 2b       	or	r22, r24
 4d0:	65 bb       	out	0x15, r22	; 21
 4d2:	08 95       	ret
 4d4:	82 b3       	in	r24, 0x12	; 18
 4d6:	68 2b       	or	r22, r24
 4d8:	62 bb       	out	0x12, r22	; 18
 4da:	08 95       	ret
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	59 f0       	breq	.+22     	; 0x4f6 <Gpio_PinWrite+0x52>
 4e0:	28 f0       	brcs	.+10     	; 0x4ec <Gpio_PinWrite+0x48>
 4e2:	82 30       	cpi	r24, 0x02	; 2
 4e4:	69 f0       	breq	.+26     	; 0x500 <Gpio_PinWrite+0x5c>
 4e6:	83 30       	cpi	r24, 0x03	; 3
 4e8:	81 f0       	breq	.+32     	; 0x50a <Gpio_PinWrite+0x66>
 4ea:	08 95       	ret
 4ec:	8b b3       	in	r24, 0x1b	; 27
 4ee:	60 95       	com	r22
 4f0:	68 23       	and	r22, r24
 4f2:	6b bb       	out	0x1b, r22	; 27
 4f4:	08 95       	ret
 4f6:	88 b3       	in	r24, 0x18	; 24
 4f8:	60 95       	com	r22
 4fa:	68 23       	and	r22, r24
 4fc:	68 bb       	out	0x18, r22	; 24
 4fe:	08 95       	ret
 500:	85 b3       	in	r24, 0x15	; 21
 502:	60 95       	com	r22
 504:	68 23       	and	r22, r24
 506:	65 bb       	out	0x15, r22	; 21
 508:	08 95       	ret
 50a:	82 b3       	in	r24, 0x12	; 18
 50c:	60 95       	com	r22
 50e:	68 23       	and	r22, r24
 510:	62 bb       	out	0x12, r22	; 18
 512:	08 95       	ret

00000514 <Interrupts_On>:
 514:	8f b7       	in	r24, 0x3f	; 63
 516:	80 68       	ori	r24, 0x80	; 128
 518:	8f bf       	out	0x3f, r24	; 63
 51a:	08 95       	ret

0000051c <Interrupts_ExtInt_Init>:
 51c:	86 30       	cpi	r24, 0x06	; 6
 51e:	31 f0       	breq	.+12     	; 0x52c <Interrupts_ExtInt_Init+0x10>
 520:	87 30       	cpi	r24, 0x07	; 7
 522:	a1 f1       	breq	.+104    	; 0x58c <Interrupts_ExtInt_Init+0x70>
 524:	85 30       	cpi	r24, 0x05	; 5
 526:	09 f0       	breq	.+2      	; 0x52a <Interrupts_ExtInt_Init+0xe>
 528:	64 c0       	rjmp	.+200    	; 0x5f2 <Interrupts_ExtInt_Init+0xd6>
 52a:	60 c0       	rjmp	.+192    	; 0x5ec <Interrupts_ExtInt_Init+0xd0>
 52c:	61 30       	cpi	r22, 0x01	; 1
 52e:	81 f0       	breq	.+32     	; 0x550 <Interrupts_ExtInt_Init+0x34>
 530:	28 f0       	brcs	.+10     	; 0x53c <Interrupts_ExtInt_Init+0x20>
 532:	62 30       	cpi	r22, 0x02	; 2
 534:	b9 f0       	breq	.+46     	; 0x564 <Interrupts_ExtInt_Init+0x48>
 536:	63 30       	cpi	r22, 0x03	; 3
 538:	f9 f0       	breq	.+62     	; 0x578 <Interrupts_ExtInt_Init+0x5c>
 53a:	08 95       	ret
 53c:	8b b7       	in	r24, 0x3b	; 59
 53e:	80 64       	ori	r24, 0x40	; 64
 540:	8b bf       	out	0x3b, r24	; 59
 542:	85 b7       	in	r24, 0x35	; 53
 544:	8e 7f       	andi	r24, 0xFE	; 254
 546:	85 bf       	out	0x35, r24	; 53
 548:	85 b7       	in	r24, 0x35	; 53
 54a:	8d 7f       	andi	r24, 0xFD	; 253
 54c:	85 bf       	out	0x35, r24	; 53
 54e:	08 95       	ret
 550:	8b b7       	in	r24, 0x3b	; 59
 552:	80 64       	ori	r24, 0x40	; 64
 554:	8b bf       	out	0x3b, r24	; 59
 556:	85 b7       	in	r24, 0x35	; 53
 558:	81 60       	ori	r24, 0x01	; 1
 55a:	85 bf       	out	0x35, r24	; 53
 55c:	85 b7       	in	r24, 0x35	; 53
 55e:	8d 7f       	andi	r24, 0xFD	; 253
 560:	85 bf       	out	0x35, r24	; 53
 562:	08 95       	ret
 564:	8b b7       	in	r24, 0x3b	; 59
 566:	80 64       	ori	r24, 0x40	; 64
 568:	8b bf       	out	0x3b, r24	; 59
 56a:	85 b7       	in	r24, 0x35	; 53
 56c:	82 60       	ori	r24, 0x02	; 2
 56e:	85 bf       	out	0x35, r24	; 53
 570:	85 b7       	in	r24, 0x35	; 53
 572:	8e 7f       	andi	r24, 0xFE	; 254
 574:	85 bf       	out	0x35, r24	; 53
 576:	08 95       	ret
 578:	8b b7       	in	r24, 0x3b	; 59
 57a:	80 64       	ori	r24, 0x40	; 64
 57c:	8b bf       	out	0x3b, r24	; 59
 57e:	85 b7       	in	r24, 0x35	; 53
 580:	82 60       	ori	r24, 0x02	; 2
 582:	85 bf       	out	0x35, r24	; 53
 584:	85 b7       	in	r24, 0x35	; 53
 586:	81 60       	ori	r24, 0x01	; 1
 588:	85 bf       	out	0x35, r24	; 53
 58a:	08 95       	ret
 58c:	61 30       	cpi	r22, 0x01	; 1
 58e:	81 f0       	breq	.+32     	; 0x5b0 <Interrupts_ExtInt_Init+0x94>
 590:	28 f0       	brcs	.+10     	; 0x59c <Interrupts_ExtInt_Init+0x80>
 592:	62 30       	cpi	r22, 0x02	; 2
 594:	b9 f0       	breq	.+46     	; 0x5c4 <Interrupts_ExtInt_Init+0xa8>
 596:	63 30       	cpi	r22, 0x03	; 3
 598:	f9 f0       	breq	.+62     	; 0x5d8 <Interrupts_ExtInt_Init+0xbc>
 59a:	08 95       	ret
 59c:	8b b7       	in	r24, 0x3b	; 59
 59e:	80 68       	ori	r24, 0x80	; 128
 5a0:	8b bf       	out	0x3b, r24	; 59
 5a2:	85 b7       	in	r24, 0x35	; 53
 5a4:	8b 7f       	andi	r24, 0xFB	; 251
 5a6:	85 bf       	out	0x35, r24	; 53
 5a8:	85 b7       	in	r24, 0x35	; 53
 5aa:	87 7f       	andi	r24, 0xF7	; 247
 5ac:	85 bf       	out	0x35, r24	; 53
 5ae:	08 95       	ret
 5b0:	8b b7       	in	r24, 0x3b	; 59
 5b2:	80 68       	ori	r24, 0x80	; 128
 5b4:	8b bf       	out	0x3b, r24	; 59
 5b6:	85 b7       	in	r24, 0x35	; 53
 5b8:	84 60       	ori	r24, 0x04	; 4
 5ba:	85 bf       	out	0x35, r24	; 53
 5bc:	85 b7       	in	r24, 0x35	; 53
 5be:	87 7f       	andi	r24, 0xF7	; 247
 5c0:	85 bf       	out	0x35, r24	; 53
 5c2:	08 95       	ret
 5c4:	8b b7       	in	r24, 0x3b	; 59
 5c6:	80 68       	ori	r24, 0x80	; 128
 5c8:	8b bf       	out	0x3b, r24	; 59
 5ca:	85 b7       	in	r24, 0x35	; 53
 5cc:	88 60       	ori	r24, 0x08	; 8
 5ce:	85 bf       	out	0x35, r24	; 53
 5d0:	85 b7       	in	r24, 0x35	; 53
 5d2:	8b 7f       	andi	r24, 0xFB	; 251
 5d4:	85 bf       	out	0x35, r24	; 53
 5d6:	08 95       	ret
 5d8:	8b b7       	in	r24, 0x3b	; 59
 5da:	80 68       	ori	r24, 0x80	; 128
 5dc:	8b bf       	out	0x3b, r24	; 59
 5de:	85 b7       	in	r24, 0x35	; 53
 5e0:	88 60       	ori	r24, 0x08	; 8
 5e2:	85 bf       	out	0x35, r24	; 53
 5e4:	85 b7       	in	r24, 0x35	; 53
 5e6:	84 60       	ori	r24, 0x04	; 4
 5e8:	85 bf       	out	0x35, r24	; 53
 5ea:	08 95       	ret
 5ec:	8b b7       	in	r24, 0x3b	; 59
 5ee:	80 62       	ori	r24, 0x20	; 32
 5f0:	8b bf       	out	0x3b, r24	; 59
 5f2:	08 95       	ret

000005f4 <PWM_Init>:
 * @param dutyCycle the duty cycle of the PWM in percentage
 * @param freq the frequency of the PWM in Hz
 */

void PWM_Init( uint8 ch_no){
	switch(ch_no)
 5f4:	81 30       	cpi	r24, 0x01	; 1
 5f6:	49 f0       	breq	.+18     	; 0x60a <PWM_Init+0x16>
 5f8:	18 f0       	brcs	.+6      	; 0x600 <PWM_Init+0xc>
 5fa:	82 30       	cpi	r24, 0x02	; 2
 5fc:	59 f0       	breq	.+22     	; 0x614 <PWM_Init+0x20>
 5fe:	08 95       	ret
	{
		case TIMER0:
		Timers_Init(&timer0_cfg_s);
 600:	82 e7       	ldi	r24, 0x72	; 114
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <Timers_Init>
		break;
 608:	08 95       	ret
		case TIMER1:
		Timers_Init(&timer1_cfg_s);
 60a:	89 e6       	ldi	r24, 0x69	; 105
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <Timers_Init>
		break;
 612:	08 95       	ret
		case TIMER2:
		Timers_Init(&timer2_cfg_s);
 614:	80 e6       	ldi	r24, 0x60	; 96
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <Timers_Init>
 61c:	08 95       	ret

0000061e <PWM_PhaseCorrect>:
 * Description: PWM_PhaseCorrect is a function to initiate a PWM on a GPIO pin OC1 
 * @param dutyCycle the duty cycle of the PWM in percentage
 * @param freq the frequency of the PWM in Hz
 */

void PWM_PhaseCorrect( uint8 dutycycle , uint16 freq){
 61e:	cf 93       	push	r28
 620:	c8 2f       	mov	r28, r24
	uint16 TOP_Value;
	uint16 Compare_Value;
	TOP_Value = F_CPU / ( 2 * freq * Gv_PrescallerTimer1_AbsoluteValue);
 622:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 626:	90 91 92 00 	lds	r25, 0x0092	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 62a:	88 0f       	add	r24, r24
 62c:	99 1f       	adc	r25, r25
 62e:	86 9f       	mul	r24, r22
 630:	90 01       	movw	r18, r0
 632:	87 9f       	mul	r24, r23
 634:	30 0d       	add	r19, r0
 636:	96 9f       	mul	r25, r22
 638:	30 0d       	add	r19, r0
 63a:	11 24       	eor	r1, r1
 63c:	40 e0       	ldi	r20, 0x00	; 0
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	60 e0       	ldi	r22, 0x00	; 0
 642:	72 e1       	ldi	r23, 0x12	; 18
 644:	8a e7       	ldi	r24, 0x7A	; 122
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 64c:	52 2f       	mov	r21, r18
 64e:	43 2f       	mov	r20, r19
 650:	82 2f       	mov	r24, r18
 652:	93 2f       	mov	r25, r19
	Compare_Value = (TOP_Value*dutycycle)/DUTY_CYCLE_PERCENTAGE_FACTOR;
 654:	c8 9f       	mul	r28, r24
 656:	90 01       	movw	r18, r0
 658:	c9 9f       	mul	r28, r25
 65a:	30 0d       	add	r19, r0
 65c:	11 24       	eor	r1, r1
 65e:	36 95       	lsr	r19
 660:	27 95       	ror	r18
 662:	36 95       	lsr	r19
 664:	27 95       	ror	r18
 666:	ab e7       	ldi	r26, 0x7B	; 123
 668:	b4 e1       	ldi	r27, 0x14	; 20
 66a:	0e 94 18 07 	call	0xe30	; 0xe30 <__umulhisi3>
 66e:	96 95       	lsr	r25
 670:	87 95       	ror	r24
	ICR1L  = (uint8)(TOP_Value);
 672:	56 bd       	out	0x26, r21	; 38
	ICR1H  = (uint8)(TOP_Value>>8);
 674:	47 bd       	out	0x27, r20	; 39
	OCR1AL = (uint8)(Compare_Value);
 676:	8a bd       	out	0x2a, r24	; 42
	OCR1AH = (uint8)(Compare_Value>>8);
 678:	9b bd       	out	0x2b, r25	; 43
 67a:	cf 91       	pop	r28
 67c:	08 95       	ret

0000067e <Timers_SetCounter>:
			break;
			case  T2_PRESCALER_1024 :
			Gv_PrescallerTimer2_AbsoluteValue= 1024;
			break;
		}
}
 67e:	8f 92       	push	r8
 680:	9f 92       	push	r9
 682:	af 92       	push	r10
 684:	bf 92       	push	r11
 686:	cf 92       	push	r12
 688:	df 92       	push	r13
 68a:	ef 92       	push	r14
 68c:	ff 92       	push	r15
 68e:	81 30       	cpi	r24, 0x01	; 1
 690:	89 f1       	breq	.+98     	; 0x6f4 <Timers_SetCounter+0x76>
 692:	20 f0       	brcs	.+8      	; 0x69c <Timers_SetCounter+0x1e>
 694:	82 30       	cpi	r24, 0x02	; 2
 696:	09 f4       	brne	.+2      	; 0x69a <Timers_SetCounter+0x1c>
 698:	5b c0       	rjmp	.+182    	; 0x750 <Timers_SetCounter+0xd2>
 69a:	85 c0       	rjmp	.+266    	; 0x7a6 <Timers_SetCounter+0x128>
 69c:	a0 91 8f 00 	lds	r26, 0x008F	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 6a0:	b0 91 90 00 	lds	r27, 0x0090	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 6a4:	80 90 89 00 	lds	r8, 0x0089	; 0x800089 <Gv_F_CPU>
 6a8:	90 90 8a 00 	lds	r9, 0x008A	; 0x80008a <Gv_F_CPU+0x1>
 6ac:	a0 90 8b 00 	lds	r10, 0x008B	; 0x80008b <Gv_F_CPU+0x2>
 6b0:	b0 90 8c 00 	lds	r11, 0x008C	; 0x80008c <Gv_F_CPU+0x3>
 6b4:	6b 01       	movw	r12, r22
 6b6:	e1 2c       	mov	r14, r1
 6b8:	f1 2c       	mov	r15, r1
 6ba:	20 e4       	ldi	r18, 0x40	; 64
 6bc:	32 e4       	ldi	r19, 0x42	; 66
 6be:	4f e0       	ldi	r20, 0x0F	; 15
 6c0:	50 e0       	ldi	r21, 0x00	; 0
 6c2:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__muluhisi3>
 6c6:	a5 01       	movw	r20, r10
 6c8:	94 01       	movw	r18, r8
 6ca:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 6ce:	c7 01       	movw	r24, r14
 6d0:	b6 01       	movw	r22, r12
 6d2:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 6d6:	21 30       	cpi	r18, 0x01	; 1
 6d8:	81 e0       	ldi	r24, 0x01	; 1
 6da:	38 07       	cpc	r19, r24
 6dc:	41 05       	cpc	r20, r1
 6de:	51 05       	cpc	r21, r1
 6e0:	08 f0       	brcs	.+2      	; 0x6e4 <Timers_SetCounter+0x66>
 6e2:	63 c0       	rjmp	.+198    	; 0x7aa <Timers_SetCounter+0x12c>
 6e4:	21 95       	neg	r18
 6e6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <Gv_Count>
 6ea:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Gv_Count>
 6ee:	82 bf       	out	0x32, r24	; 50
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	60 c0       	rjmp	.+192    	; 0x7b4 <Timers_SetCounter+0x136>
 6f4:	a0 91 91 00 	lds	r26, 0x0091	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 6f8:	b0 91 92 00 	lds	r27, 0x0092	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 6fc:	80 90 89 00 	lds	r8, 0x0089	; 0x800089 <Gv_F_CPU>
 700:	90 90 8a 00 	lds	r9, 0x008A	; 0x80008a <Gv_F_CPU+0x1>
 704:	a0 90 8b 00 	lds	r10, 0x008B	; 0x80008b <Gv_F_CPU+0x2>
 708:	b0 90 8c 00 	lds	r11, 0x008C	; 0x80008c <Gv_F_CPU+0x3>
 70c:	6b 01       	movw	r12, r22
 70e:	e1 2c       	mov	r14, r1
 710:	f1 2c       	mov	r15, r1
 712:	20 e4       	ldi	r18, 0x40	; 64
 714:	32 e4       	ldi	r19, 0x42	; 66
 716:	4f e0       	ldi	r20, 0x0F	; 15
 718:	50 e0       	ldi	r21, 0x00	; 0
 71a:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__muluhisi3>
 71e:	a5 01       	movw	r20, r10
 720:	94 01       	movw	r18, r8
 722:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 726:	c7 01       	movw	r24, r14
 728:	b6 01       	movw	r22, r12
 72a:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 72e:	21 30       	cpi	r18, 0x01	; 1
 730:	31 05       	cpc	r19, r1
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	48 07       	cpc	r20, r24
 736:	51 05       	cpc	r21, r1
 738:	d0 f5       	brcc	.+116    	; 0x7ae <Timers_SetCounter+0x130>
 73a:	21 95       	neg	r18
 73c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <Gv_Count>
 740:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Gv_Count>
 744:	8c bd       	out	0x2c, r24	; 44
 746:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Gv_Count>
 74a:	1d bc       	out	0x2d, r1	; 45
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	32 c0       	rjmp	.+100    	; 0x7b4 <Timers_SetCounter+0x136>
 750:	a0 91 8d 00 	lds	r26, 0x008D	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 754:	b0 91 8e 00 	lds	r27, 0x008E	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 758:	80 90 89 00 	lds	r8, 0x0089	; 0x800089 <Gv_F_CPU>
 75c:	90 90 8a 00 	lds	r9, 0x008A	; 0x80008a <Gv_F_CPU+0x1>
 760:	a0 90 8b 00 	lds	r10, 0x008B	; 0x80008b <Gv_F_CPU+0x2>
 764:	b0 90 8c 00 	lds	r11, 0x008C	; 0x80008c <Gv_F_CPU+0x3>
 768:	6b 01       	movw	r12, r22
 76a:	e1 2c       	mov	r14, r1
 76c:	f1 2c       	mov	r15, r1
 76e:	20 e4       	ldi	r18, 0x40	; 64
 770:	32 e4       	ldi	r19, 0x42	; 66
 772:	4f e0       	ldi	r20, 0x0F	; 15
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__muluhisi3>
 77a:	a5 01       	movw	r20, r10
 77c:	94 01       	movw	r18, r8
 77e:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 782:	c7 01       	movw	r24, r14
 784:	b6 01       	movw	r22, r12
 786:	0e 94 f6 06 	call	0xdec	; 0xdec <__udivmodsi4>
 78a:	21 30       	cpi	r18, 0x01	; 1
 78c:	81 e0       	ldi	r24, 0x01	; 1
 78e:	38 07       	cpc	r19, r24
 790:	41 05       	cpc	r20, r1
 792:	51 05       	cpc	r21, r1
 794:	70 f4       	brcc	.+28     	; 0x7b2 <Timers_SetCounter+0x134>
 796:	21 95       	neg	r18
 798:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <Gv_Count>
 79c:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Gv_Count>
 7a0:	84 bd       	out	0x24, r24	; 36
 7a2:	81 e0       	ldi	r24, 0x01	; 1
 7a4:	07 c0       	rjmp	.+14     	; 0x7b4 <Timers_SetCounter+0x136>
 7a6:	80 e0       	ldi	r24, 0x00	; 0
 7a8:	05 c0       	rjmp	.+10     	; 0x7b4 <Timers_SetCounter+0x136>
 7aa:	80 e0       	ldi	r24, 0x00	; 0
 7ac:	03 c0       	rjmp	.+6      	; 0x7b4 <Timers_SetCounter+0x136>
 7ae:	80 e0       	ldi	r24, 0x00	; 0
 7b0:	01 c0       	rjmp	.+2      	; 0x7b4 <Timers_SetCounter+0x136>
 7b2:	80 e0       	ldi	r24, 0x00	; 0
 7b4:	ff 90       	pop	r15
 7b6:	ef 90       	pop	r14
 7b8:	df 90       	pop	r13
 7ba:	cf 90       	pop	r12
 7bc:	bf 90       	pop	r11
 7be:	af 90       	pop	r10
 7c0:	9f 90       	pop	r9
 7c2:	8f 90       	pop	r8
 7c4:	08 95       	ret

000007c6 <Timers_Init>:
 7c6:	1f 93       	push	r17
 7c8:	cf 93       	push	r28
 7ca:	df 93       	push	r29
 7cc:	ec 01       	movw	r28, r24
 7ce:	8d 81       	ldd	r24, Y+5	; 0x05
 7d0:	9e 81       	ldd	r25, Y+6	; 0x06
 7d2:	af 81       	ldd	r26, Y+7	; 0x07
 7d4:	b8 85       	ldd	r27, Y+8	; 0x08
 7d6:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <Gv_F_CPU>
 7da:	90 93 8a 00 	sts	0x008A, r25	; 0x80008a <Gv_F_CPU+0x1>
 7de:	a0 93 8b 00 	sts	0x008B, r26	; 0x80008b <Gv_F_CPU+0x2>
 7e2:	b0 93 8c 00 	sts	0x008C, r27	; 0x80008c <Gv_F_CPU+0x3>
 7e6:	88 81       	ld	r24, Y
 7e8:	81 30       	cpi	r24, 0x01	; 1
 7ea:	09 f4       	brne	.+2      	; 0x7ee <Timers_Init+0x28>
 7ec:	4b c0       	rjmp	.+150    	; 0x884 <__stack+0x25>
 7ee:	20 f0       	brcs	.+8      	; 0x7f8 <Timers_Init+0x32>
 7f0:	82 30       	cpi	r24, 0x02	; 2
 7f2:	09 f4       	brne	.+2      	; 0x7f6 <Timers_Init+0x30>
 7f4:	97 c0       	rjmp	.+302    	; 0x924 <__stack+0xc5>
 7f6:	dd c0       	rjmp	.+442    	; 0x9b2 <__stack+0x153>
 7f8:	93 b7       	in	r25, 0x33	; 51
 7fa:	89 81       	ldd	r24, Y+1	; 0x01
 7fc:	89 2b       	or	r24, r25
 7fe:	83 bf       	out	0x33, r24	; 51
 800:	99 b7       	in	r25, 0x39	; 57
 802:	8c 81       	ldd	r24, Y+4	; 0x04
 804:	89 2b       	or	r24, r25
 806:	89 bf       	out	0x39, r24	; 57
 808:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <Gv_PrescallerTimer0_Mask>
 80c:	82 30       	cpi	r24, 0x02	; 2
 80e:	d1 f0       	breq	.+52     	; 0x844 <Timers_Init+0x7e>
 810:	28 f4       	brcc	.+10     	; 0x81c <Timers_Init+0x56>
 812:	88 23       	and	r24, r24
 814:	49 f0       	breq	.+18     	; 0x828 <Timers_Init+0x62>
 816:	81 30       	cpi	r24, 0x01	; 1
 818:	69 f0       	breq	.+26     	; 0x834 <Timers_Init+0x6e>
 81a:	cd c0       	rjmp	.+410    	; 0x9b6 <__stack+0x157>
 81c:	84 30       	cpi	r24, 0x04	; 4
 81e:	11 f1       	breq	.+68     	; 0x864 <__stack+0x5>
 820:	c8 f0       	brcs	.+50     	; 0x854 <Timers_Init+0x8e>
 822:	85 30       	cpi	r24, 0x05	; 5
 824:	39 f1       	breq	.+78     	; 0x874 <__stack+0x15>
 826:	c7 c0       	rjmp	.+398    	; 0x9b6 <__stack+0x157>
 828:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 82c:	10 92 8f 00 	sts	0x008F, r1	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 830:	11 e0       	ldi	r17, 0x01	; 1
 832:	c6 c0       	rjmp	.+396    	; 0x9c0 <__stack+0x161>
 834:	81 e0       	ldi	r24, 0x01	; 1
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 83c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 840:	11 e0       	ldi	r17, 0x01	; 1
 842:	be c0       	rjmp	.+380    	; 0x9c0 <__stack+0x161>
 844:	88 e0       	ldi	r24, 0x08	; 8
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 84c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 850:	11 e0       	ldi	r17, 0x01	; 1
 852:	b6 c0       	rjmp	.+364    	; 0x9c0 <__stack+0x161>
 854:	80 e4       	ldi	r24, 0x40	; 64
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 85c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 860:	11 e0       	ldi	r17, 0x01	; 1
 862:	ae c0       	rjmp	.+348    	; 0x9c0 <__stack+0x161>
 864:	80 e0       	ldi	r24, 0x00	; 0
 866:	91 e0       	ldi	r25, 0x01	; 1
 868:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 86c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 870:	11 e0       	ldi	r17, 0x01	; 1
 872:	a6 c0       	rjmp	.+332    	; 0x9c0 <__stack+0x161>
 874:	80 e0       	ldi	r24, 0x00	; 0
 876:	94 e0       	ldi	r25, 0x04	; 4
 878:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
 87c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <Gv_PrescallerTimer0_AbsoluteValue>
 880:	11 e0       	ldi	r17, 0x01	; 1
 882:	9e c0       	rjmp	.+316    	; 0x9c0 <__stack+0x161>
 884:	9f b5       	in	r25, 0x2f	; 47
 886:	89 81       	ldd	r24, Y+1	; 0x01
 888:	83 70       	andi	r24, 0x03	; 3
 88a:	89 2b       	or	r24, r25
 88c:	8f bd       	out	0x2f, r24	; 47
 88e:	9e b5       	in	r25, 0x2e	; 46
 890:	89 81       	ldd	r24, Y+1	; 0x01
 892:	88 71       	andi	r24, 0x18	; 24
 894:	89 2b       	or	r24, r25
 896:	8e bd       	out	0x2e, r24	; 46
 898:	8f b5       	in	r24, 0x2f	; 47
 89a:	80 68       	ori	r24, 0x80	; 128
 89c:	8f bd       	out	0x2f, r24	; 47
 89e:	4f ef       	ldi	r20, 0xFF	; 255
 8a0:	60 e2       	ldi	r22, 0x20	; 32
 8a2:	83 e0       	ldi	r24, 0x03	; 3
 8a4:	0e 94 12 02 	call	0x424	; 0x424 <Gpio_PinDirection>
 8a8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <Gv_PrescallerTimer1_Mask>
 8ac:	82 30       	cpi	r24, 0x02	; 2
 8ae:	d1 f0       	breq	.+52     	; 0x8e4 <__stack+0x85>
 8b0:	28 f4       	brcc	.+10     	; 0x8bc <__stack+0x5d>
 8b2:	88 23       	and	r24, r24
 8b4:	49 f0       	breq	.+18     	; 0x8c8 <__stack+0x69>
 8b6:	81 30       	cpi	r24, 0x01	; 1
 8b8:	69 f0       	breq	.+26     	; 0x8d4 <__stack+0x75>
 8ba:	7f c0       	rjmp	.+254    	; 0x9ba <__stack+0x15b>
 8bc:	84 30       	cpi	r24, 0x04	; 4
 8be:	11 f1       	breq	.+68     	; 0x904 <__stack+0xa5>
 8c0:	c8 f0       	brcs	.+50     	; 0x8f4 <__stack+0x95>
 8c2:	85 30       	cpi	r24, 0x05	; 5
 8c4:	39 f1       	breq	.+78     	; 0x914 <__stack+0xb5>
 8c6:	79 c0       	rjmp	.+242    	; 0x9ba <__stack+0x15b>
 8c8:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 8cc:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 8d0:	11 e0       	ldi	r17, 0x01	; 1
 8d2:	76 c0       	rjmp	.+236    	; 0x9c0 <__stack+0x161>
 8d4:	81 e0       	ldi	r24, 0x01	; 1
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 8dc:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 8e0:	11 e0       	ldi	r17, 0x01	; 1
 8e2:	6e c0       	rjmp	.+220    	; 0x9c0 <__stack+0x161>
 8e4:	88 e0       	ldi	r24, 0x08	; 8
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 8ec:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 8f0:	11 e0       	ldi	r17, 0x01	; 1
 8f2:	66 c0       	rjmp	.+204    	; 0x9c0 <__stack+0x161>
 8f4:	80 e4       	ldi	r24, 0x40	; 64
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 8fc:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 900:	11 e0       	ldi	r17, 0x01	; 1
 902:	5e c0       	rjmp	.+188    	; 0x9c0 <__stack+0x161>
 904:	80 e0       	ldi	r24, 0x00	; 0
 906:	91 e0       	ldi	r25, 0x01	; 1
 908:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 90c:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 910:	11 e0       	ldi	r17, 0x01	; 1
 912:	56 c0       	rjmp	.+172    	; 0x9c0 <__stack+0x161>
 914:	80 e0       	ldi	r24, 0x00	; 0
 916:	94 e0       	ldi	r25, 0x04	; 4
 918:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
 91c:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Gv_PrescallerTimer1_AbsoluteValue>
 920:	11 e0       	ldi	r17, 0x01	; 1
 922:	4e c0       	rjmp	.+156    	; 0x9c0 <__stack+0x161>
 924:	95 b5       	in	r25, 0x25	; 37
 926:	89 81       	ldd	r24, Y+1	; 0x01
 928:	89 2b       	or	r24, r25
 92a:	85 bd       	out	0x25, r24	; 37
 92c:	99 b7       	in	r25, 0x39	; 57
 92e:	8c 81       	ldd	r24, Y+4	; 0x04
 930:	89 2b       	or	r24, r25
 932:	89 bf       	out	0x39, r24	; 57
 934:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <Gv_PrescallerTimer2_Mask>
 938:	82 30       	cpi	r24, 0x02	; 2
 93a:	d9 f0       	breq	.+54     	; 0x972 <__stack+0x113>
 93c:	28 f4       	brcc	.+10     	; 0x948 <__stack+0xe9>
 93e:	88 23       	and	r24, r24
 940:	51 f0       	breq	.+20     	; 0x956 <__stack+0xf7>
 942:	81 30       	cpi	r24, 0x01	; 1
 944:	71 f0       	breq	.+28     	; 0x962 <__stack+0x103>
 946:	3b c0       	rjmp	.+118    	; 0x9be <__stack+0x15f>
 948:	86 30       	cpi	r24, 0x06	; 6
 94a:	19 f1       	breq	.+70     	; 0x992 <__stack+0x133>
 94c:	87 30       	cpi	r24, 0x07	; 7
 94e:	49 f1       	breq	.+82     	; 0x9a2 <__stack+0x143>
 950:	84 30       	cpi	r24, 0x04	; 4
 952:	a9 f5       	brne	.+106    	; 0x9be <__stack+0x15f>
 954:	16 c0       	rjmp	.+44     	; 0x982 <__stack+0x123>
 956:	10 92 8e 00 	sts	0x008E, r1	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 95a:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 95e:	11 e0       	ldi	r17, 0x01	; 1
 960:	2f c0       	rjmp	.+94     	; 0x9c0 <__stack+0x161>
 962:	81 e0       	ldi	r24, 0x01	; 1
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	90 93 8e 00 	sts	0x008E, r25	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 96a:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 96e:	11 e0       	ldi	r17, 0x01	; 1
 970:	27 c0       	rjmp	.+78     	; 0x9c0 <__stack+0x161>
 972:	88 e0       	ldi	r24, 0x08	; 8
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	90 93 8e 00 	sts	0x008E, r25	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 97a:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 97e:	11 e0       	ldi	r17, 0x01	; 1
 980:	1f c0       	rjmp	.+62     	; 0x9c0 <__stack+0x161>
 982:	80 e4       	ldi	r24, 0x40	; 64
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	90 93 8e 00 	sts	0x008E, r25	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 98a:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 98e:	11 e0       	ldi	r17, 0x01	; 1
 990:	17 c0       	rjmp	.+46     	; 0x9c0 <__stack+0x161>
 992:	80 e0       	ldi	r24, 0x00	; 0
 994:	91 e0       	ldi	r25, 0x01	; 1
 996:	90 93 8e 00 	sts	0x008E, r25	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 99a:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 99e:	11 e0       	ldi	r17, 0x01	; 1
 9a0:	0f c0       	rjmp	.+30     	; 0x9c0 <__stack+0x161>
 9a2:	80 e0       	ldi	r24, 0x00	; 0
 9a4:	94 e0       	ldi	r25, 0x04	; 4
 9a6:	90 93 8e 00 	sts	0x008E, r25	; 0x80008e <Gv_PrescallerTimer2_AbsoluteValue+0x1>
 9aa:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <Gv_PrescallerTimer2_AbsoluteValue>
 9ae:	11 e0       	ldi	r17, 0x01	; 1
 9b0:	07 c0       	rjmp	.+14     	; 0x9c0 <__stack+0x161>
 9b2:	10 e0       	ldi	r17, 0x00	; 0
 9b4:	05 c0       	rjmp	.+10     	; 0x9c0 <__stack+0x161>
 9b6:	11 e0       	ldi	r17, 0x01	; 1
 9b8:	03 c0       	rjmp	.+6      	; 0x9c0 <__stack+0x161>
 9ba:	11 e0       	ldi	r17, 0x01	; 1
 9bc:	01 c0       	rjmp	.+2      	; 0x9c0 <__stack+0x161>
 9be:	11 e0       	ldi	r17, 0x01	; 1
 9c0:	6a 81       	ldd	r22, Y+2	; 0x02
 9c2:	7b 81       	ldd	r23, Y+3	; 0x03
 9c4:	88 81       	ld	r24, Y
 9c6:	0e 94 3f 03 	call	0x67e	; 0x67e <Timers_SetCounter>
 9ca:	81 2f       	mov	r24, r17
 9cc:	df 91       	pop	r29
 9ce:	cf 91       	pop	r28
 9d0:	1f 91       	pop	r17
 9d2:	08 95       	ret

000009d4 <Timers_Set>:
 9d4:	81 30       	cpi	r24, 0x01	; 1
 9d6:	31 f0       	breq	.+12     	; 0x9e4 <Timers_Set+0x10>
 9d8:	18 f0       	brcs	.+6      	; 0x9e0 <Timers_Set+0xc>
 9da:	82 30       	cpi	r24, 0x02	; 2
 9dc:	31 f0       	breq	.+12     	; 0x9ea <Timers_Set+0x16>
 9de:	06 c0       	rjmp	.+12     	; 0x9ec <Timers_Set+0x18>
 9e0:	62 bf       	out	0x32, r22	; 50
 9e2:	04 c0       	rjmp	.+8      	; 0x9ec <Timers_Set+0x18>
 9e4:	6c bd       	out	0x2c, r22	; 44
 9e6:	7d bd       	out	0x2d, r23	; 45
 9e8:	01 c0       	rjmp	.+2      	; 0x9ec <Timers_Set+0x18>
 9ea:	64 bd       	out	0x24, r22	; 36
 9ec:	81 e0       	ldi	r24, 0x01	; 1
 9ee:	08 95       	ret

000009f0 <Timers_Start>:
 9f0:	81 30       	cpi	r24, 0x01	; 1
 9f2:	51 f0       	breq	.+20     	; 0xa08 <Timers_Start+0x18>
 9f4:	18 f0       	brcs	.+6      	; 0x9fc <Timers_Start+0xc>
 9f6:	82 30       	cpi	r24, 0x02	; 2
 9f8:	69 f0       	breq	.+26     	; 0xa14 <Timers_Start+0x24>
 9fa:	11 c0       	rjmp	.+34     	; 0xa1e <Timers_Start+0x2e>
 9fc:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <Gv_PrescallerTimer0_Mask>
 a00:	83 b7       	in	r24, 0x33	; 51
 a02:	89 2b       	or	r24, r25
 a04:	83 bf       	out	0x33, r24	; 51
 a06:	0b c0       	rjmp	.+22     	; 0xa1e <Timers_Start+0x2e>
 a08:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <Gv_PrescallerTimer1_Mask>
 a0c:	8e b5       	in	r24, 0x2e	; 46
 a0e:	89 2b       	or	r24, r25
 a10:	8e bd       	out	0x2e, r24	; 46
 a12:	05 c0       	rjmp	.+10     	; 0xa1e <Timers_Start+0x2e>
 a14:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <Gv_PrescallerTimer2_Mask>
 a18:	85 b5       	in	r24, 0x25	; 37
 a1a:	89 2b       	or	r24, r25
 a1c:	85 bd       	out	0x25, r24	; 37
 a1e:	81 e0       	ldi	r24, 0x01	; 1
 a20:	08 95       	ret

00000a22 <Timers_Stop>:
 a22:	81 30       	cpi	r24, 0x01	; 1
 a24:	41 f0       	breq	.+16     	; 0xa36 <Timers_Stop+0x14>
 a26:	18 f0       	brcs	.+6      	; 0xa2e <Timers_Stop+0xc>
 a28:	82 30       	cpi	r24, 0x02	; 2
 a2a:	49 f0       	breq	.+18     	; 0xa3e <Timers_Stop+0x1c>
 a2c:	0b c0       	rjmp	.+22     	; 0xa44 <Timers_Stop+0x22>
 a2e:	83 b7       	in	r24, 0x33	; 51
 a30:	88 7f       	andi	r24, 0xF8	; 248
 a32:	83 bf       	out	0x33, r24	; 51
 a34:	07 c0       	rjmp	.+14     	; 0xa44 <Timers_Stop+0x22>
 a36:	8e b5       	in	r24, 0x2e	; 46
 a38:	88 7f       	andi	r24, 0xF8	; 248
 a3a:	8e bd       	out	0x2e, r24	; 46
 a3c:	03 c0       	rjmp	.+6      	; 0xa44 <Timers_Stop+0x22>
 a3e:	85 b5       	in	r24, 0x25	; 37
 a40:	88 7f       	andi	r24, 0xF8	; 248
 a42:	85 bd       	out	0x25, r24	; 37
 a44:	81 e0       	ldi	r24, 0x01	; 1
 a46:	08 95       	ret

00000a48 <Timers_timer2_Set>:
 * @param value the value to be set with no more than 255
 */

void Timers_timer2_Set(uint8 value)
{
	TCNT2 = value;
 a48:	84 bd       	out	0x24, r24	; 36
 a4a:	08 95       	ret

00000a4c <Timers_timer2_Read>:
 * @return return the value
 */

uint8 Timers_timer2_Read(void)
{
	return TCNT2;
 a4c:	84 b5       	in	r24, 0x24	; 36
}
 a4e:	08 95       	ret

00000a50 <SwDelay_ms>:
 a50:	9b 01       	movw	r18, r22
 a52:	ac 01       	movw	r20, r24
 a54:	a0 e4       	ldi	r26, 0x40	; 64
 a56:	bf e1       	ldi	r27, 0x1F	; 31
 a58:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__muluhisi3>
 a5c:	16 16       	cp	r1, r22
 a5e:	17 06       	cpc	r1, r23
 a60:	18 06       	cpc	r1, r24
 a62:	19 06       	cpc	r1, r25
 a64:	4c f4       	brge	.+18     	; 0xa78 <SwDelay_ms+0x28>
 a66:	69 50       	subi	r22, 0x09	; 9
 a68:	71 09       	sbc	r23, r1
 a6a:	81 09       	sbc	r24, r1
 a6c:	91 09       	sbc	r25, r1
 a6e:	16 16       	cp	r1, r22
 a70:	17 06       	cpc	r1, r23
 a72:	18 06       	cpc	r1, r24
 a74:	19 06       	cpc	r1, r25
 a76:	bc f3       	brlt	.-18     	; 0xa66 <SwDelay_ms+0x16>
 a78:	08 95       	ret

00000a7a <SwDelay_us>:
 a7a:	dc 01       	movw	r26, r24
 a7c:	cb 01       	movw	r24, r22
 a7e:	88 0f       	add	r24, r24
 a80:	99 1f       	adc	r25, r25
 a82:	aa 1f       	adc	r26, r26
 a84:	bb 1f       	adc	r27, r27
 a86:	88 0f       	add	r24, r24
 a88:	99 1f       	adc	r25, r25
 a8a:	aa 1f       	adc	r26, r26
 a8c:	bb 1f       	adc	r27, r27
 a8e:	88 0f       	add	r24, r24
 a90:	99 1f       	adc	r25, r25
 a92:	aa 1f       	adc	r26, r26
 a94:	bb 1f       	adc	r27, r27
 a96:	18 16       	cp	r1, r24
 a98:	19 06       	cpc	r1, r25
 a9a:	1a 06       	cpc	r1, r26
 a9c:	1b 06       	cpc	r1, r27
 a9e:	44 f4       	brge	.+16     	; 0xab0 <SwDelay_us+0x36>
 aa0:	0d 97       	sbiw	r24, 0x0d	; 13
 aa2:	a1 09       	sbc	r26, r1
 aa4:	b1 09       	sbc	r27, r1
 aa6:	18 16       	cp	r1, r24
 aa8:	19 06       	cpc	r1, r25
 aaa:	1a 06       	cpc	r1, r26
 aac:	1b 06       	cpc	r1, r27
 aae:	c4 f3       	brlt	.-16     	; 0xaa0 <SwDelay_us+0x26>
 ab0:	08 95       	ret

00000ab2 <__divsf3>:
 ab2:	0e 94 6d 05 	call	0xada	; 0xada <__divsf3x>
 ab6:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <__fp_round>
 aba:	0e 94 48 06 	call	0xc90	; 0xc90 <__fp_pscB>
 abe:	58 f0       	brcs	.+22     	; 0xad6 <__divsf3+0x24>
 ac0:	0e 94 41 06 	call	0xc82	; 0xc82 <__fp_pscA>
 ac4:	40 f0       	brcs	.+16     	; 0xad6 <__divsf3+0x24>
 ac6:	29 f4       	brne	.+10     	; 0xad2 <__divsf3+0x20>
 ac8:	5f 3f       	cpi	r21, 0xFF	; 255
 aca:	29 f0       	breq	.+10     	; 0xad6 <__divsf3+0x24>
 acc:	0c 94 38 06 	jmp	0xc70	; 0xc70 <__fp_inf>
 ad0:	51 11       	cpse	r21, r1
 ad2:	0c 94 83 06 	jmp	0xd06	; 0xd06 <__fp_szero>
 ad6:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_nan>

00000ada <__divsf3x>:
 ada:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__fp_split3>
 ade:	68 f3       	brcs	.-38     	; 0xaba <__divsf3+0x8>

00000ae0 <__divsf3_pse>:
 ae0:	99 23       	and	r25, r25
 ae2:	b1 f3       	breq	.-20     	; 0xad0 <__divsf3+0x1e>
 ae4:	55 23       	and	r21, r21
 ae6:	91 f3       	breq	.-28     	; 0xacc <__divsf3+0x1a>
 ae8:	95 1b       	sub	r25, r21
 aea:	55 0b       	sbc	r21, r21
 aec:	bb 27       	eor	r27, r27
 aee:	aa 27       	eor	r26, r26
 af0:	62 17       	cp	r22, r18
 af2:	73 07       	cpc	r23, r19
 af4:	84 07       	cpc	r24, r20
 af6:	38 f0       	brcs	.+14     	; 0xb06 <__divsf3_pse+0x26>
 af8:	9f 5f       	subi	r25, 0xFF	; 255
 afa:	5f 4f       	sbci	r21, 0xFF	; 255
 afc:	22 0f       	add	r18, r18
 afe:	33 1f       	adc	r19, r19
 b00:	44 1f       	adc	r20, r20
 b02:	aa 1f       	adc	r26, r26
 b04:	a9 f3       	breq	.-22     	; 0xaf0 <__divsf3_pse+0x10>
 b06:	35 d0       	rcall	.+106    	; 0xb72 <__divsf3_pse+0x92>
 b08:	0e 2e       	mov	r0, r30
 b0a:	3a f0       	brmi	.+14     	; 0xb1a <__divsf3_pse+0x3a>
 b0c:	e0 e8       	ldi	r30, 0x80	; 128
 b0e:	32 d0       	rcall	.+100    	; 0xb74 <__divsf3_pse+0x94>
 b10:	91 50       	subi	r25, 0x01	; 1
 b12:	50 40       	sbci	r21, 0x00	; 0
 b14:	e6 95       	lsr	r30
 b16:	00 1c       	adc	r0, r0
 b18:	ca f7       	brpl	.-14     	; 0xb0c <__divsf3_pse+0x2c>
 b1a:	2b d0       	rcall	.+86     	; 0xb72 <__divsf3_pse+0x92>
 b1c:	fe 2f       	mov	r31, r30
 b1e:	29 d0       	rcall	.+82     	; 0xb72 <__divsf3_pse+0x92>
 b20:	66 0f       	add	r22, r22
 b22:	77 1f       	adc	r23, r23
 b24:	88 1f       	adc	r24, r24
 b26:	bb 1f       	adc	r27, r27
 b28:	26 17       	cp	r18, r22
 b2a:	37 07       	cpc	r19, r23
 b2c:	48 07       	cpc	r20, r24
 b2e:	ab 07       	cpc	r26, r27
 b30:	b0 e8       	ldi	r27, 0x80	; 128
 b32:	09 f0       	breq	.+2      	; 0xb36 <__divsf3_pse+0x56>
 b34:	bb 0b       	sbc	r27, r27
 b36:	80 2d       	mov	r24, r0
 b38:	bf 01       	movw	r22, r30
 b3a:	ff 27       	eor	r31, r31
 b3c:	93 58       	subi	r25, 0x83	; 131
 b3e:	5f 4f       	sbci	r21, 0xFF	; 255
 b40:	3a f0       	brmi	.+14     	; 0xb50 <__divsf3_pse+0x70>
 b42:	9e 3f       	cpi	r25, 0xFE	; 254
 b44:	51 05       	cpc	r21, r1
 b46:	78 f0       	brcs	.+30     	; 0xb66 <__divsf3_pse+0x86>
 b48:	0c 94 38 06 	jmp	0xc70	; 0xc70 <__fp_inf>
 b4c:	0c 94 83 06 	jmp	0xd06	; 0xd06 <__fp_szero>
 b50:	5f 3f       	cpi	r21, 0xFF	; 255
 b52:	e4 f3       	brlt	.-8      	; 0xb4c <__divsf3_pse+0x6c>
 b54:	98 3e       	cpi	r25, 0xE8	; 232
 b56:	d4 f3       	brlt	.-12     	; 0xb4c <__divsf3_pse+0x6c>
 b58:	86 95       	lsr	r24
 b5a:	77 95       	ror	r23
 b5c:	67 95       	ror	r22
 b5e:	b7 95       	ror	r27
 b60:	f7 95       	ror	r31
 b62:	9f 5f       	subi	r25, 0xFF	; 255
 b64:	c9 f7       	brne	.-14     	; 0xb58 <__divsf3_pse+0x78>
 b66:	88 0f       	add	r24, r24
 b68:	91 1d       	adc	r25, r1
 b6a:	96 95       	lsr	r25
 b6c:	87 95       	ror	r24
 b6e:	97 f9       	bld	r25, 7
 b70:	08 95       	ret
 b72:	e1 e0       	ldi	r30, 0x01	; 1
 b74:	66 0f       	add	r22, r22
 b76:	77 1f       	adc	r23, r23
 b78:	88 1f       	adc	r24, r24
 b7a:	bb 1f       	adc	r27, r27
 b7c:	62 17       	cp	r22, r18
 b7e:	73 07       	cpc	r23, r19
 b80:	84 07       	cpc	r24, r20
 b82:	ba 07       	cpc	r27, r26
 b84:	20 f0       	brcs	.+8      	; 0xb8e <__divsf3_pse+0xae>
 b86:	62 1b       	sub	r22, r18
 b88:	73 0b       	sbc	r23, r19
 b8a:	84 0b       	sbc	r24, r20
 b8c:	ba 0b       	sbc	r27, r26
 b8e:	ee 1f       	adc	r30, r30
 b90:	88 f7       	brcc	.-30     	; 0xb74 <__divsf3_pse+0x94>
 b92:	e0 95       	com	r30
 b94:	08 95       	ret

00000b96 <__fixunssfsi>:
 b96:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fp_splitA>
 b9a:	88 f0       	brcs	.+34     	; 0xbbe <__fixunssfsi+0x28>
 b9c:	9f 57       	subi	r25, 0x7F	; 127
 b9e:	98 f0       	brcs	.+38     	; 0xbc6 <__fixunssfsi+0x30>
 ba0:	b9 2f       	mov	r27, r25
 ba2:	99 27       	eor	r25, r25
 ba4:	b7 51       	subi	r27, 0x17	; 23
 ba6:	b0 f0       	brcs	.+44     	; 0xbd4 <__fixunssfsi+0x3e>
 ba8:	e1 f0       	breq	.+56     	; 0xbe2 <__fixunssfsi+0x4c>
 baa:	66 0f       	add	r22, r22
 bac:	77 1f       	adc	r23, r23
 bae:	88 1f       	adc	r24, r24
 bb0:	99 1f       	adc	r25, r25
 bb2:	1a f0       	brmi	.+6      	; 0xbba <__fixunssfsi+0x24>
 bb4:	ba 95       	dec	r27
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__fixunssfsi+0x14>
 bb8:	14 c0       	rjmp	.+40     	; 0xbe2 <__fixunssfsi+0x4c>
 bba:	b1 30       	cpi	r27, 0x01	; 1
 bbc:	91 f0       	breq	.+36     	; 0xbe2 <__fixunssfsi+0x4c>
 bbe:	0e 94 82 06 	call	0xd04	; 0xd04 <__fp_zero>
 bc2:	b1 e0       	ldi	r27, 0x01	; 1
 bc4:	08 95       	ret
 bc6:	0c 94 82 06 	jmp	0xd04	; 0xd04 <__fp_zero>
 bca:	67 2f       	mov	r22, r23
 bcc:	78 2f       	mov	r23, r24
 bce:	88 27       	eor	r24, r24
 bd0:	b8 5f       	subi	r27, 0xF8	; 248
 bd2:	39 f0       	breq	.+14     	; 0xbe2 <__fixunssfsi+0x4c>
 bd4:	b9 3f       	cpi	r27, 0xF9	; 249
 bd6:	cc f3       	brlt	.-14     	; 0xbca <__fixunssfsi+0x34>
 bd8:	86 95       	lsr	r24
 bda:	77 95       	ror	r23
 bdc:	67 95       	ror	r22
 bde:	b3 95       	inc	r27
 be0:	d9 f7       	brne	.-10     	; 0xbd8 <__fixunssfsi+0x42>
 be2:	3e f4       	brtc	.+14     	; 0xbf2 <__fixunssfsi+0x5c>
 be4:	90 95       	com	r25
 be6:	80 95       	com	r24
 be8:	70 95       	com	r23
 bea:	61 95       	neg	r22
 bec:	7f 4f       	sbci	r23, 0xFF	; 255
 bee:	8f 4f       	sbci	r24, 0xFF	; 255
 bf0:	9f 4f       	sbci	r25, 0xFF	; 255
 bf2:	08 95       	ret

00000bf4 <__floatundisf>:
 bf4:	e8 94       	clt

00000bf6 <__fp_di2sf>:
 bf6:	f9 2f       	mov	r31, r25
 bf8:	96 eb       	ldi	r25, 0xB6	; 182
 bfa:	ff 23       	and	r31, r31
 bfc:	81 f0       	breq	.+32     	; 0xc1e <__fp_di2sf+0x28>
 bfe:	12 16       	cp	r1, r18
 c00:	13 06       	cpc	r1, r19
 c02:	14 06       	cpc	r1, r20
 c04:	44 0b       	sbc	r20, r20
 c06:	93 95       	inc	r25
 c08:	f6 95       	lsr	r31
 c0a:	87 95       	ror	r24
 c0c:	77 95       	ror	r23
 c0e:	67 95       	ror	r22
 c10:	57 95       	ror	r21
 c12:	40 40       	sbci	r20, 0x00	; 0
 c14:	ff 23       	and	r31, r31
 c16:	b9 f7       	brne	.-18     	; 0xc06 <__fp_di2sf+0x10>
 c18:	1b c0       	rjmp	.+54     	; 0xc50 <__fp_di2sf+0x5a>
 c1a:	99 27       	eor	r25, r25
 c1c:	08 95       	ret
 c1e:	88 23       	and	r24, r24
 c20:	51 f4       	brne	.+20     	; 0xc36 <__fp_di2sf+0x40>
 c22:	98 50       	subi	r25, 0x08	; 8
 c24:	d2 f7       	brpl	.-12     	; 0xc1a <__fp_di2sf+0x24>
 c26:	87 2b       	or	r24, r23
 c28:	76 2f       	mov	r23, r22
 c2a:	65 2f       	mov	r22, r21
 c2c:	54 2f       	mov	r21, r20
 c2e:	43 2f       	mov	r20, r19
 c30:	32 2f       	mov	r19, r18
 c32:	20 e0       	ldi	r18, 0x00	; 0
 c34:	b1 f3       	breq	.-20     	; 0xc22 <__fp_di2sf+0x2c>
 c36:	12 16       	cp	r1, r18
 c38:	13 06       	cpc	r1, r19
 c3a:	14 06       	cpc	r1, r20
 c3c:	44 0b       	sbc	r20, r20
 c3e:	88 23       	and	r24, r24
 c40:	3a f0       	brmi	.+14     	; 0xc50 <__fp_di2sf+0x5a>
 c42:	9a 95       	dec	r25
 c44:	44 0f       	add	r20, r20
 c46:	55 1f       	adc	r21, r21
 c48:	66 1f       	adc	r22, r22
 c4a:	77 1f       	adc	r23, r23
 c4c:	88 1f       	adc	r24, r24
 c4e:	ca f7       	brpl	.-14     	; 0xc42 <__fp_di2sf+0x4c>
 c50:	55 23       	and	r21, r21
 c52:	4a f4       	brpl	.+18     	; 0xc66 <__fp_di2sf+0x70>
 c54:	44 0f       	add	r20, r20
 c56:	55 1f       	adc	r21, r21
 c58:	11 f4       	brne	.+4      	; 0xc5e <__fp_di2sf+0x68>
 c5a:	60 ff       	sbrs	r22, 0
 c5c:	04 c0       	rjmp	.+8      	; 0xc66 <__fp_di2sf+0x70>
 c5e:	6f 5f       	subi	r22, 0xFF	; 255
 c60:	7f 4f       	sbci	r23, 0xFF	; 255
 c62:	8f 4f       	sbci	r24, 0xFF	; 255
 c64:	9f 4f       	sbci	r25, 0xFF	; 255
 c66:	88 0f       	add	r24, r24
 c68:	96 95       	lsr	r25
 c6a:	87 95       	ror	r24
 c6c:	97 f9       	bld	r25, 7
 c6e:	08 95       	ret

00000c70 <__fp_inf>:
 c70:	97 f9       	bld	r25, 7
 c72:	9f 67       	ori	r25, 0x7F	; 127
 c74:	80 e8       	ldi	r24, 0x80	; 128
 c76:	70 e0       	ldi	r23, 0x00	; 0
 c78:	60 e0       	ldi	r22, 0x00	; 0
 c7a:	08 95       	ret

00000c7c <__fp_nan>:
 c7c:	9f ef       	ldi	r25, 0xFF	; 255
 c7e:	80 ec       	ldi	r24, 0xC0	; 192
 c80:	08 95       	ret

00000c82 <__fp_pscA>:
 c82:	00 24       	eor	r0, r0
 c84:	0a 94       	dec	r0
 c86:	16 16       	cp	r1, r22
 c88:	17 06       	cpc	r1, r23
 c8a:	18 06       	cpc	r1, r24
 c8c:	09 06       	cpc	r0, r25
 c8e:	08 95       	ret

00000c90 <__fp_pscB>:
 c90:	00 24       	eor	r0, r0
 c92:	0a 94       	dec	r0
 c94:	12 16       	cp	r1, r18
 c96:	13 06       	cpc	r1, r19
 c98:	14 06       	cpc	r1, r20
 c9a:	05 06       	cpc	r0, r21
 c9c:	08 95       	ret

00000c9e <__fp_round>:
 c9e:	09 2e       	mov	r0, r25
 ca0:	03 94       	inc	r0
 ca2:	00 0c       	add	r0, r0
 ca4:	11 f4       	brne	.+4      	; 0xcaa <__fp_round+0xc>
 ca6:	88 23       	and	r24, r24
 ca8:	52 f0       	brmi	.+20     	; 0xcbe <__fp_round+0x20>
 caa:	bb 0f       	add	r27, r27
 cac:	40 f4       	brcc	.+16     	; 0xcbe <__fp_round+0x20>
 cae:	bf 2b       	or	r27, r31
 cb0:	11 f4       	brne	.+4      	; 0xcb6 <__fp_round+0x18>
 cb2:	60 ff       	sbrs	r22, 0
 cb4:	04 c0       	rjmp	.+8      	; 0xcbe <__fp_round+0x20>
 cb6:	6f 5f       	subi	r22, 0xFF	; 255
 cb8:	7f 4f       	sbci	r23, 0xFF	; 255
 cba:	8f 4f       	sbci	r24, 0xFF	; 255
 cbc:	9f 4f       	sbci	r25, 0xFF	; 255
 cbe:	08 95       	ret

00000cc0 <__fp_split3>:
 cc0:	57 fd       	sbrc	r21, 7
 cc2:	90 58       	subi	r25, 0x80	; 128
 cc4:	44 0f       	add	r20, r20
 cc6:	55 1f       	adc	r21, r21
 cc8:	59 f0       	breq	.+22     	; 0xce0 <__fp_splitA+0x10>
 cca:	5f 3f       	cpi	r21, 0xFF	; 255
 ccc:	71 f0       	breq	.+28     	; 0xcea <__fp_splitA+0x1a>
 cce:	47 95       	ror	r20

00000cd0 <__fp_splitA>:
 cd0:	88 0f       	add	r24, r24
 cd2:	97 fb       	bst	r25, 7
 cd4:	99 1f       	adc	r25, r25
 cd6:	61 f0       	breq	.+24     	; 0xcf0 <__fp_splitA+0x20>
 cd8:	9f 3f       	cpi	r25, 0xFF	; 255
 cda:	79 f0       	breq	.+30     	; 0xcfa <__fp_splitA+0x2a>
 cdc:	87 95       	ror	r24
 cde:	08 95       	ret
 ce0:	12 16       	cp	r1, r18
 ce2:	13 06       	cpc	r1, r19
 ce4:	14 06       	cpc	r1, r20
 ce6:	55 1f       	adc	r21, r21
 ce8:	f2 cf       	rjmp	.-28     	; 0xcce <__fp_split3+0xe>
 cea:	46 95       	lsr	r20
 cec:	f1 df       	rcall	.-30     	; 0xcd0 <__fp_splitA>
 cee:	08 c0       	rjmp	.+16     	; 0xd00 <__fp_splitA+0x30>
 cf0:	16 16       	cp	r1, r22
 cf2:	17 06       	cpc	r1, r23
 cf4:	18 06       	cpc	r1, r24
 cf6:	99 1f       	adc	r25, r25
 cf8:	f1 cf       	rjmp	.-30     	; 0xcdc <__fp_splitA+0xc>
 cfa:	86 95       	lsr	r24
 cfc:	71 05       	cpc	r23, r1
 cfe:	61 05       	cpc	r22, r1
 d00:	08 94       	sec
 d02:	08 95       	ret

00000d04 <__fp_zero>:
 d04:	e8 94       	clt

00000d06 <__fp_szero>:
 d06:	bb 27       	eor	r27, r27
 d08:	66 27       	eor	r22, r22
 d0a:	77 27       	eor	r23, r23
 d0c:	cb 01       	movw	r24, r22
 d0e:	97 f9       	bld	r25, 7
 d10:	08 95       	ret

00000d12 <__mulsf3>:
 d12:	0e 94 9c 06 	call	0xd38	; 0xd38 <__mulsf3x>
 d16:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <__fp_round>
 d1a:	0e 94 41 06 	call	0xc82	; 0xc82 <__fp_pscA>
 d1e:	38 f0       	brcs	.+14     	; 0xd2e <__mulsf3+0x1c>
 d20:	0e 94 48 06 	call	0xc90	; 0xc90 <__fp_pscB>
 d24:	20 f0       	brcs	.+8      	; 0xd2e <__mulsf3+0x1c>
 d26:	95 23       	and	r25, r21
 d28:	11 f0       	breq	.+4      	; 0xd2e <__mulsf3+0x1c>
 d2a:	0c 94 38 06 	jmp	0xc70	; 0xc70 <__fp_inf>
 d2e:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_nan>
 d32:	11 24       	eor	r1, r1
 d34:	0c 94 83 06 	jmp	0xd06	; 0xd06 <__fp_szero>

00000d38 <__mulsf3x>:
 d38:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__fp_split3>
 d3c:	70 f3       	brcs	.-36     	; 0xd1a <__mulsf3+0x8>

00000d3e <__mulsf3_pse>:
 d3e:	95 9f       	mul	r25, r21
 d40:	c1 f3       	breq	.-16     	; 0xd32 <__mulsf3+0x20>
 d42:	95 0f       	add	r25, r21
 d44:	50 e0       	ldi	r21, 0x00	; 0
 d46:	55 1f       	adc	r21, r21
 d48:	62 9f       	mul	r22, r18
 d4a:	f0 01       	movw	r30, r0
 d4c:	72 9f       	mul	r23, r18
 d4e:	bb 27       	eor	r27, r27
 d50:	f0 0d       	add	r31, r0
 d52:	b1 1d       	adc	r27, r1
 d54:	63 9f       	mul	r22, r19
 d56:	aa 27       	eor	r26, r26
 d58:	f0 0d       	add	r31, r0
 d5a:	b1 1d       	adc	r27, r1
 d5c:	aa 1f       	adc	r26, r26
 d5e:	64 9f       	mul	r22, r20
 d60:	66 27       	eor	r22, r22
 d62:	b0 0d       	add	r27, r0
 d64:	a1 1d       	adc	r26, r1
 d66:	66 1f       	adc	r22, r22
 d68:	82 9f       	mul	r24, r18
 d6a:	22 27       	eor	r18, r18
 d6c:	b0 0d       	add	r27, r0
 d6e:	a1 1d       	adc	r26, r1
 d70:	62 1f       	adc	r22, r18
 d72:	73 9f       	mul	r23, r19
 d74:	b0 0d       	add	r27, r0
 d76:	a1 1d       	adc	r26, r1
 d78:	62 1f       	adc	r22, r18
 d7a:	83 9f       	mul	r24, r19
 d7c:	a0 0d       	add	r26, r0
 d7e:	61 1d       	adc	r22, r1
 d80:	22 1f       	adc	r18, r18
 d82:	74 9f       	mul	r23, r20
 d84:	33 27       	eor	r19, r19
 d86:	a0 0d       	add	r26, r0
 d88:	61 1d       	adc	r22, r1
 d8a:	23 1f       	adc	r18, r19
 d8c:	84 9f       	mul	r24, r20
 d8e:	60 0d       	add	r22, r0
 d90:	21 1d       	adc	r18, r1
 d92:	82 2f       	mov	r24, r18
 d94:	76 2f       	mov	r23, r22
 d96:	6a 2f       	mov	r22, r26
 d98:	11 24       	eor	r1, r1
 d9a:	9f 57       	subi	r25, 0x7F	; 127
 d9c:	50 40       	sbci	r21, 0x00	; 0
 d9e:	9a f0       	brmi	.+38     	; 0xdc6 <__mulsf3_pse+0x88>
 da0:	f1 f0       	breq	.+60     	; 0xdde <__mulsf3_pse+0xa0>
 da2:	88 23       	and	r24, r24
 da4:	4a f0       	brmi	.+18     	; 0xdb8 <__mulsf3_pse+0x7a>
 da6:	ee 0f       	add	r30, r30
 da8:	ff 1f       	adc	r31, r31
 daa:	bb 1f       	adc	r27, r27
 dac:	66 1f       	adc	r22, r22
 dae:	77 1f       	adc	r23, r23
 db0:	88 1f       	adc	r24, r24
 db2:	91 50       	subi	r25, 0x01	; 1
 db4:	50 40       	sbci	r21, 0x00	; 0
 db6:	a9 f7       	brne	.-22     	; 0xda2 <__mulsf3_pse+0x64>
 db8:	9e 3f       	cpi	r25, 0xFE	; 254
 dba:	51 05       	cpc	r21, r1
 dbc:	80 f0       	brcs	.+32     	; 0xdde <__mulsf3_pse+0xa0>
 dbe:	0c 94 38 06 	jmp	0xc70	; 0xc70 <__fp_inf>
 dc2:	0c 94 83 06 	jmp	0xd06	; 0xd06 <__fp_szero>
 dc6:	5f 3f       	cpi	r21, 0xFF	; 255
 dc8:	e4 f3       	brlt	.-8      	; 0xdc2 <__mulsf3_pse+0x84>
 dca:	98 3e       	cpi	r25, 0xE8	; 232
 dcc:	d4 f3       	brlt	.-12     	; 0xdc2 <__mulsf3_pse+0x84>
 dce:	86 95       	lsr	r24
 dd0:	77 95       	ror	r23
 dd2:	67 95       	ror	r22
 dd4:	b7 95       	ror	r27
 dd6:	f7 95       	ror	r31
 dd8:	e7 95       	ror	r30
 dda:	9f 5f       	subi	r25, 0xFF	; 255
 ddc:	c1 f7       	brne	.-16     	; 0xdce <__mulsf3_pse+0x90>
 dde:	fe 2b       	or	r31, r30
 de0:	88 0f       	add	r24, r24
 de2:	91 1d       	adc	r25, r1
 de4:	96 95       	lsr	r25
 de6:	87 95       	ror	r24
 de8:	97 f9       	bld	r25, 7
 dea:	08 95       	ret

00000dec <__udivmodsi4>:
 dec:	a1 e2       	ldi	r26, 0x21	; 33
 dee:	1a 2e       	mov	r1, r26
 df0:	aa 1b       	sub	r26, r26
 df2:	bb 1b       	sub	r27, r27
 df4:	fd 01       	movw	r30, r26
 df6:	0d c0       	rjmp	.+26     	; 0xe12 <__udivmodsi4_ep>

00000df8 <__udivmodsi4_loop>:
 df8:	aa 1f       	adc	r26, r26
 dfa:	bb 1f       	adc	r27, r27
 dfc:	ee 1f       	adc	r30, r30
 dfe:	ff 1f       	adc	r31, r31
 e00:	a2 17       	cp	r26, r18
 e02:	b3 07       	cpc	r27, r19
 e04:	e4 07       	cpc	r30, r20
 e06:	f5 07       	cpc	r31, r21
 e08:	20 f0       	brcs	.+8      	; 0xe12 <__udivmodsi4_ep>
 e0a:	a2 1b       	sub	r26, r18
 e0c:	b3 0b       	sbc	r27, r19
 e0e:	e4 0b       	sbc	r30, r20
 e10:	f5 0b       	sbc	r31, r21

00000e12 <__udivmodsi4_ep>:
 e12:	66 1f       	adc	r22, r22
 e14:	77 1f       	adc	r23, r23
 e16:	88 1f       	adc	r24, r24
 e18:	99 1f       	adc	r25, r25
 e1a:	1a 94       	dec	r1
 e1c:	69 f7       	brne	.-38     	; 0xdf8 <__udivmodsi4_loop>
 e1e:	60 95       	com	r22
 e20:	70 95       	com	r23
 e22:	80 95       	com	r24
 e24:	90 95       	com	r25
 e26:	9b 01       	movw	r18, r22
 e28:	ac 01       	movw	r20, r24
 e2a:	bd 01       	movw	r22, r26
 e2c:	cf 01       	movw	r24, r30
 e2e:	08 95       	ret

00000e30 <__umulhisi3>:
 e30:	a2 9f       	mul	r26, r18
 e32:	b0 01       	movw	r22, r0
 e34:	b3 9f       	mul	r27, r19
 e36:	c0 01       	movw	r24, r0
 e38:	a3 9f       	mul	r26, r19
 e3a:	70 0d       	add	r23, r0
 e3c:	81 1d       	adc	r24, r1
 e3e:	11 24       	eor	r1, r1
 e40:	91 1d       	adc	r25, r1
 e42:	b2 9f       	mul	r27, r18
 e44:	70 0d       	add	r23, r0
 e46:	81 1d       	adc	r24, r1
 e48:	11 24       	eor	r1, r1
 e4a:	91 1d       	adc	r25, r1
 e4c:	08 95       	ret

00000e4e <__usmulhisi3>:
 e4e:	0e 94 18 07 	call	0xe30	; 0xe30 <__umulhisi3>

00000e52 <__usmulhisi3_tail>:
 e52:	b7 ff       	sbrs	r27, 7
 e54:	08 95       	ret
 e56:	82 1b       	sub	r24, r18
 e58:	93 0b       	sbc	r25, r19
 e5a:	08 95       	ret

00000e5c <__muluhisi3>:
 e5c:	0e 94 18 07 	call	0xe30	; 0xe30 <__umulhisi3>
 e60:	a5 9f       	mul	r26, r21
 e62:	90 0d       	add	r25, r0
 e64:	b4 9f       	mul	r27, r20
 e66:	90 0d       	add	r25, r0
 e68:	a4 9f       	mul	r26, r20
 e6a:	80 0d       	add	r24, r0
 e6c:	91 1d       	adc	r25, r1
 e6e:	11 24       	eor	r1, r1
 e70:	08 95       	ret

00000e72 <_exit>:
 e72:	f8 94       	cli

00000e74 <__stop_program>:
 e74:	ff cf       	rjmp	.-2      	; 0xe74 <__stop_program>
